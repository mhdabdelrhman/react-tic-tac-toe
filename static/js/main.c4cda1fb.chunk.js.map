{"version":3,"sources":["components/Cell.js","components/Game.js","assets/logo.svg","App.js","reportWebVitals.js","index.js"],"names":["Cell","value","row","column","onClick","className","SCORE_KEY","PLAYER_KEY","Game","props","initState","localStorage","getItem","initScore","JSON","parse","x","o","tie","useState","score","nextState","setNextState","values","setValues","useEffect","setItem","stringify","handleCellClick","map","rowIndex","coulmnIndex","length","App","href","src","Logo","alt","width","height","target","Date","getFullYear","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","onclick","document","getElementById"],"mappings":"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","file":"static/js/main.c4cda1fb.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Cell = ({ value, row, column, onClick }) => {  \r\n  return (\r\n    <div className=\"cell\" onClick={() => onClick({ row, column })}>\r\n      <span>\r\n        {value && value > 0 ? (\r\n          value === 1 ? (\r\n            \"X\"\r\n          ) : (\r\n            \"O\"\r\n          )\r\n        ) : (\r\n          <>&nbsp;</>\r\n        )}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cell;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Cell from \"./Cell\";\r\nconst SCORE_KEY = \"_score\";\r\nconst PLAYER_KEY = \"_player\";\r\nconst Game = props => {\r\n  const defaultValues = [\r\n    [0, 0, 0],\r\n    [0, 0, 0],\r\n    [0, 0, 0]\r\n  ];\r\n  const initState = +localStorage.getItem(PLAYER_KEY) || 1;\r\n  const initScore = JSON.parse(localStorage.getItem(SCORE_KEY)) || {\r\n    x: 0,\r\n    o: 0,\r\n    tie: 0\r\n  };\r\n  const [score, setScore] = useState(initScore);\r\n  const [nextState, setNextState] = useState(initState);\r\n  const [values, setValues] = useState([...defaultValues]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(SCORE_KEY, JSON.stringify(score));\r\n    localStorage.setItem(PLAYER_KEY, nextState);\r\n  });\r\n\r\n  let handleCellClick = ({ row, column }) => {\r\n    if (values[row][column] > 0) return;\r\n    values[row][column] = nextState;\r\n    setValues([...values]);\r\n    setNextState(nextState === 1 ? 2 : 1);\r\n  };\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      <div>\r\n        <span>Current player:</span>\r\n        <span className=\"ms-1 py-1 px-2 text-light bg-dark rounded\">\r\n          {nextState === 1 ? \"X\" : \"O\"}\r\n        </span>\r\n      </div>\r\n      <div className=\"mt-5\">\r\n        {values.map((row, rowIndex) => (\r\n          <div key={rowIndex} className=\"g-row\">\r\n            {row.map((value, coulmnIndex) => (\r\n              <Cell\r\n                key={rowIndex * row.length + coulmnIndex}\r\n                value={value}\r\n                row={rowIndex}\r\n                column={coulmnIndex}\r\n                onClick={handleCellClick}\r\n              />\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"mt-5\">\r\n        <h3>Score:</h3>\r\n        <div className=\"d-flex justify-content-between bg-light rounded p-3\">\r\n          <div>\r\n            <span>Player X: </span>\r\n            <span className=\"text-primary\">{score.x}</span>\r\n          </div>          \r\n          <div>\r\n            <span>Player O: </span>\r\n            <span className=\"text-success\">{score.o}</span>\r\n          </div>\r\n          <div>\r\n            <span>Tie: </span>\r\n            <span className=\"text-danger\">{score.tie}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import Game from \"./components/Game\";\nimport Logo from \"./assets/logo.svg\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header>\n        <nav className=\"navbar navbar-dark bg-dark\">\n          <div className=\"container\">\n            <a className=\"navbar-brand d-flex align-items-center\" href=\"/\">\n              <img src={Logo} alt=\"\" width=\"30\" height=\"24\" />\n              <span className=\"fw-bold\">Tic-tac-toe</span>\n            </a>\n          </div>\n        </nav>\n      </header>\n      <main>\n        <div className=\"container my-5\">\n          <Game />\n        </div>\n      </main>\n      <footer>\n        <div className=\"w-100 bg-dark text-white\">\n          <div className=\"container py-3\">\n            <span>\n              Coded by \n              <a className=\"mx-1\" target=\"_blank\" href=\"https://github.com/mhdabdelrhman\">\n                mhdabdelrhman\n              </a>\n            </span>\n            <span>, @Year {new Date().getFullYear()}</span>\n          </div>\n        </div>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./scss/Style.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App onclick={123} />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}