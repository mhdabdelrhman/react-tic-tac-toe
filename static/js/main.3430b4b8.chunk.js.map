{"version":3,"sources":["components/Cell.js","components/Game.js","assets/logo.svg","App.js","reportWebVitals.js","index.js"],"names":["Cell","value","row","column","onClick","className","SCORE_KEY","PLAYER_KEY","Game","props","defaultValues","initState","localStorage","getItem","initScore","JSON","parse","x","o","tie","useState","states","setStates","score","setScore","nextState","setNextState","values","setValues","useEffect","setItem","stringify","handleCellClick","push","cloned","i","length","slice","cloneValues","winner","diagonalSum","revDiagonalSum","rowSum","colSum","j","getWinner","isGameEnd","message","Swal","fire","title","text","icon","timer","timerProgressBar","allowOutsideClick","position","showConfirmButton","then","undo","vals","pop","map","rowIndex","coulmnIndex","App","href","src","Logo","alt","width","height","target","rel","Date","getFullYear","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","onclick","document","getElementById"],"mappings":"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","file":"static/js/main.3430b4b8.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Cell = ({ value, row, column, onClick }) => {  \r\n  return (\r\n    <div className=\"cell\" onClick={() => onClick({ row, column })}>\r\n      <span>\r\n        {value && value !== 0 ? (\r\n          value === 1 ? (\r\n            \"X\"\r\n          ) : (\r\n            \"O\"\r\n          )\r\n        ) : (\r\n          <>&nbsp;</>\r\n        )}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cell;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Arrow90degLeft } from \"react-bootstrap-icons\";\r\nimport Swal from \"sweetalert2\";\r\nimport Cell from \"./Cell\";\r\nconst SCORE_KEY = \"_score\";\r\nconst PLAYER_KEY = \"_player\";\r\nconst Game = props => {\r\n  const defaultValues = [\r\n    [0, 0, 0],\r\n    [0, 0, 0],\r\n    [0, 0, 0]\r\n  ];\r\n  const initState = +localStorage.getItem(PLAYER_KEY) || -1;\r\n  const initScore = JSON.parse(localStorage.getItem(SCORE_KEY)) || {\r\n    x: 0,\r\n    o: 0,\r\n    tie: 0\r\n  };\r\n  const [states, setStates] = useState([]);\r\n  const [score, setScore] = useState(initScore);\r\n  const [nextState, setNextState] = useState(initState);\r\n  const [values, setValues] = useState([...defaultValues]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(SCORE_KEY, JSON.stringify(score));\r\n    localStorage.setItem(PLAYER_KEY, nextState);\r\n  });\r\n\r\n  const getWinner = () => {\r\n    var diagonalSum = 0;\r\n    var revDiagonalSum = 0;\r\n    for (let i = 0; i < 3; i++) {\r\n      var rowSum = 0;\r\n      var colSum = 0;\r\n\r\n      for (var j = 0; j < 3; j++) {\r\n        rowSum += values[i][j];\r\n        colSum += values[j][i];\r\n        if (i === j) {\r\n          diagonalSum += values[i][j];\r\n          revDiagonalSum += values[i][2 - j];\r\n        }\r\n      }\r\n      if (rowSum === 3 || colSum === 3) return 1;\r\n      if (rowSum === -3 || colSum === -3) return -1;\r\n    }\r\n\r\n    if (diagonalSum === 3 || revDiagonalSum === 3) return 1;\r\n    if (diagonalSum === -3 || revDiagonalSum === -3) return -1;\r\n\r\n    return 0;\r\n  };\r\n\r\n  const isGameEnd = () => {\r\n    for (let i = 0; i < 3; i++)\r\n      for (let j = 0; j < 3; j++) if (values[i][j] === 0) return false;\r\n    return true;\r\n  };\r\n\r\n  const cloneValues = () => {\r\n    let cloned = [];\r\n    for (var i = 0; i < values.length; i++) cloned[i] = values[i].slice();\r\n    return cloned;\r\n  };\r\n\r\n  const handleCellClick = ({ row, column }) => {\r\n    if (values[row][column] !== 0) return;\r\n    states.push(cloneValues());\r\n    setStates([...states]);\r\n    values[row][column] = nextState;\r\n    setValues([...values]);\r\n    setNextState(-1 * nextState);\r\n    const winner = getWinner();\r\n    if (winner !== 0 || isGameEnd()) {\r\n      const { x, o, tie } = score;\r\n      let message = \"\";\r\n      if (winner === 1) {\r\n        setScore({ x: x + 1, o, tie });\r\n        message = \"X won\";\r\n      } else if (winner === -1) {\r\n        setScore({ x, o: o + 1, tie });\r\n        message = \"O won\";\r\n      } else {\r\n        setScore({ x, o, tie: tie + 1 });\r\n        message = \"Tie\";\r\n      }\r\n      //setTimeout(() => {\r\n      Swal.fire({\r\n        title: message,\r\n        text: winner !== 0 ? \"Wonderful\" : \"Try again!!!\",\r\n        icon: winner !== 0 ? \"success\" : \"warning\",\r\n        timer: 2000,\r\n        timerProgressBar: true,\r\n        allowOutsideClick: false,\r\n        position: \"top\",\r\n        showConfirmButton: false\r\n      }).then(() => {\r\n        setValues([...defaultValues]);\r\n        setStates([]);\r\n      });\r\n      //}, 200);\r\n    }\r\n  };\r\n\r\n  const handleResetScore = () => {\r\n    setScore({ x: 0, o: 0, tie: 0 });\r\n  };\r\n\r\n  const handleUndo = () => {\r\n    const vals = states.pop();\r\n    setStates([...states]);\r\n    setValues(vals);\r\n    setNextState(-1 * nextState);\r\n  };\r\n\r\n  let undo = <></>;\r\n  if (states.length > 0)\r\n    undo = (\r\n      <button className=\"btn btn-primary btn-sm\" onClick={handleUndo}>\r\n        <Arrow90degLeft />\r\n      </button>\r\n    );\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      <div className=\"current d-flex align-items-center justify-content-between\">\r\n        <div>\r\n          <span>Current player:</span>\r\n          <span className=\"ms-1 py-1 px-2 text-light bg-dark rounded\">\r\n            {nextState === 1 ? \"X\" : \"O\"}\r\n          </span>\r\n        </div>\r\n        {undo}\r\n      </div>\r\n      <div className=\"mt-5\">\r\n        {values.map((row, rowIndex) => (\r\n          <div key={rowIndex} className=\"g-row\">\r\n            {row.map((value, coulmnIndex) => (\r\n              <Cell\r\n                key={rowIndex * row.length + coulmnIndex}\r\n                value={value}\r\n                row={rowIndex}\r\n                column={coulmnIndex}\r\n                onClick={handleCellClick}\r\n              />\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"mt-5\">\r\n        <div className=\"d-flex align-items-center justify-content-between\">\r\n          <h3>Score:</h3>\r\n          <button\r\n            className=\"btn btn-primary btn-sm ms-2\"\r\n            onClick={handleResetScore}\r\n          >\r\n            Reset\r\n          </button>\r\n        </div>\r\n        <div className=\"d-flex justify-content-between bg-light rounded p-3 mt-2\">\r\n          <div>\r\n            <span>Player X: </span>\r\n            <span className=\"text-primary\">{score.x}</span>\r\n          </div>\r\n          <div>\r\n            <span>Player O: </span>\r\n            <span className=\"text-success\">{score.o}</span>\r\n          </div>\r\n          <div>\r\n            <span>Tie: </span>\r\n            <span className=\"text-danger\">{score.tie}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import Game from \"./components/Game\";\nimport Logo from \"./assets/logo.svg\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header>\n        <nav className=\"navbar navbar-dark bg-dark\">\n          <div className=\"container\">\n            <a className=\"navbar-brand d-flex align-items-center\" href=\"/\">\n              <img src={Logo} alt=\"\" width=\"30\" height=\"24\" />\n              <span className=\"fw-bold\">Tic-tac-toe</span>\n            </a>\n          </div>\n        </nav>\n      </header>\n      <main>\n        <div className=\"container my-5\">\n          <Game />\n        </div>\n      </main>\n      <footer>\n        <div className=\"w-100 bg-dark text-white\">\n          <div className=\"container py-3\">\n            <span>\n              Coded by\n              <a\n                className=\"mx-1\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                href=\"https://github.com/mhdabdelrhman\"\n              >\n                mhdabdelrhman\n              </a>\n            </span>\n            <span>, @Year {new Date().getFullYear()}</span>\n          </div>\n        </div>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./scss/Style.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App onclick={123} />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}